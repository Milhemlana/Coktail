/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mycoktail;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author lanam
 */
public class GUI extends javax.swing.JFrame {
     Blender blender=new Blender(1000);

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        appleCheckBox = new javax.swing.JCheckBox();
        bananaCheckBox = new javax.swing.JCheckBox();
        orangeCheckBox = new javax.swing.JCheckBox();
        cherryCheckBox = new javax.swing.JCheckBox();
        Kiwii = new javax.swing.JCheckBox();
        milkCheckBox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        bigRadioButton = new javax.swing.JRadioButton();
        smallRadioButton = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        getInfoTextArea = new javax.swing.JTextArea();
        Add = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Coktail");

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 13)); // NOI18N
        jLabel1.setText("  Coktail Menu");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Choose the Fruits you want !");

        appleCheckBox.setText("Apple");
        appleCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appleCheckBoxActionPerformed(evt);
            }
        });

        bananaCheckBox.setText("Banana");
        bananaCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bananaCheckBoxActionPerformed(evt);
            }
        });

        orangeCheckBox.setText("Orange");
        orangeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orangeCheckBoxActionPerformed(evt);
            }
        });

        cherryCheckBox.setText("Cherry");
        cherryCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cherryCheckBoxActionPerformed(evt);
            }
        });

        Kiwii.setText("Kiwi");

        milkCheckBox.setText("Milk");
        milkCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                milkCheckBoxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Cup size:");

        bigRadioButton.setText("150 ml.");
        bigRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bigRadioButtonActionPerformed(evt);
            }
        });

        smallRadioButton.setText("100 ml.");
        smallRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallRadioButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Here are some Details based on what you choose:");

        getInfoTextArea.setEditable(false);
        getInfoTextArea.setColumns(20);
        getInfoTextArea.setRows(5);
        getInfoTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Get Info"));
        jScrollPane1.setViewportView(getInfoTextArea);

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(appleCheckBox)
                            .addComponent(bananaCheckBox)
                            .addComponent(orangeCheckBox)
                            .addComponent(cherryCheckBox)
                            .addComponent(Kiwii)
                            .addComponent(milkCheckBox))
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(smallRadioButton)
                            .addComponent(bigRadioButton)
                            .addComponent(jLabel4)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Add))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appleCheckBox)
                    .addComponent(bigRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bananaCheckBox)
                    .addComponent(smallRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orangeCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cherryCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Kiwii)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(milkCheckBox)
                .addGap(37, 37, 37)
                .addComponent(Add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void appleCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appleCheckBoxActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_appleCheckBoxActionPerformed

    private void bigRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bigRadioButtonActionPerformed
        // TODO add your handling code here:
        if(bigRadioButton.isSelected()){
            bigRadioButton.setSelected(true);
        smallRadioButton.setSelected(false);
        }
                Cup cup2=new Cup(150.0);
     {
         try {
             blender.pour(cup2);
         } catch (BlenderEmptyException ex) {
             Logger.getLogger(MyCoktail.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
    }//GEN-LAST:event_bigRadioButtonActionPerformed

    private void smallRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallRadioButtonActionPerformed
        // TODO add your handling code here:
        if(smallRadioButton.isSelected()){
            bigRadioButton.setSelected(false);
        smallRadioButton.setSelected(true);
        }
        Cup cup=new Cup(100.0);
     {
         try {
             blender.pour(cup);
         } catch (BlenderEmptyException ex) {
             Logger.getLogger(MyCoktail.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
        
    }//GEN-LAST:event_smallRadioButtonActionPerformed

    private void bananaCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bananaCheckBoxActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_bananaCheckBoxActionPerformed

    private void orangeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orangeCheckBoxActionPerformed
        // TODO add your handling code here:
       
       
    }//GEN-LAST:event_orangeCheckBoxActionPerformed

    private void cherryCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cherryCheckBoxActionPerformed
        // TODO add your handling code here:
          
    }//GEN-LAST:event_cherryCheckBoxActionPerformed

    private void milkCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_milkCheckBoxActionPerformed
        // TODO add your handling code here:
        
            
    }//GEN-LAST:event_milkCheckBoxActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
          if(appleCheckBox.isSelected()){
            Fruits apple=new Fruits("Apple",52,100);
             {
         try {
             blender.addIng(apple);
         } catch (VolumeExceedsException ex) {
             Logger.getLogger(MyCoktail.class.getName()).log(Level.SEVERE, null, ex);
         }
         blender.blend(apple);
         getInfoTextArea.getText();
         getInfoTextArea.append(blender.toString());
     }  
    Color col = new Color(40.1,70.59,27.84);
        }
             if(bananaCheckBox.isSelected()){
            Fruits banana =new Fruits("Banana",89,100);
      Color col2=new Color(255,255,53);
     {
         try {
             blender.addIng(banana);
         } catch (VolumeExceedsException ex) {
             Logger.getLogger(MyCoktail.class.getName()).log(Level.SEVERE, null, ex);
         }
         blender.blend(banana);
         getInfoTextArea.getText();
         getInfoTextArea.append(blender.toString());
     }
         }
              if(orangeCheckBox.isSelected()){
            Fruits orange=new Fruits("Orange",0.47,99);
     {
         try {
             blender.addIng(orange);
         } catch (VolumeExceedsException ex) {
             Logger.getLogger(MyCoktail.class.getName()).log(Level.SEVERE, null, ex);
         }
         blender.blend(orange);
         getInfoTextArea.getText();
         getInfoTextArea.append(blender.toString());
     }
      Color col1=new Color(255,165,0);
        }
               if(cherryCheckBox.isSelected()){
              Fruits cherry=new Fruits("Cherry",50,100);
     {
         try {
             blender.addIng(cherry);
         } catch (VolumeExceedsException ex) {
             Logger.getLogger(MyCoktail.class.getName()).log(Level.SEVERE, null, ex);
         }
         blender.blend(cherry);
         getInfoTextArea.getText();
         getInfoTextArea.append(blender.toString());
     }
      Color col3=new Color(210,4,45);
        }
               if(milkCheckBox.isSelected()){
                    Milk milk=new Milk("Milk",42,100);
     {
         try {
             blender.addIng(milk);
         } catch (VolumeExceedsException ex) {
             Logger.getLogger(MyCoktail.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
     if(Kiwii.isSelected()){
         Fruits kiwi=new Fruits("Kiwi",61,100);
     {
         try {
             blender.addIng(kiwi);
         } catch (VolumeExceedsException ex) {
             Logger.getLogger(MyCoktail.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
         Color col4=new Color(55.69,89.8,24.71);
     }
               }
      
    }//GEN-LAST:event_AddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JCheckBox Kiwii;
    private javax.swing.JCheckBox appleCheckBox;
    private javax.swing.JCheckBox bananaCheckBox;
    private javax.swing.JRadioButton bigRadioButton;
    private javax.swing.JCheckBox cherryCheckBox;
    private javax.swing.JTextArea getInfoTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox milkCheckBox;
    private javax.swing.JCheckBox orangeCheckBox;
    private javax.swing.JRadioButton smallRadioButton;
    // End of variables declaration//GEN-END:variables
}
